# -*- mode: ruby -*-
# vi: set ft=ruby :

$script= <<SCRIPT

#
# Do not exec script again on a vagrant reprovision
#
if [ -e /var/lib/vagrant/provisionning/ok ] ; then
  exit 0
fi

LOG=/tmp/provisionning.log

title() {
    echo ""
    echo "##################################################################"
    echo " $1"
    echo "##################################################################"
    echo ""
}

run() {
  if [ ! -z "$1" ] ; then
    echo "==> $1"
    title "$1" >> $LOG
  fi
  shift
  $* >> $LOG 2>&1
  if [ $? -ne 0 ] ; then
    echo "ERROR... See log in $LOG on the vagrant machine" >&2
    exit 1
  fi
}

install() {
  run "Add multiverse repository" sudo add-apt-repository multiverse
  run "Update apt repositories metadata" sudo apt-get update
  run "Install Git" sudo apt-get install -y git
  run "Install Ruby" sudo apt-get install -y ruby1.9.3
  run "" sudo ln -sf /usr/bin/ruby1.9.3 /etc/alternatives/ruby
  run "" sudo ln -sf /usr/bin/gem1.9.3 /etc/alternatives/gem
  run "Install Bundler" sudo gem install bundler
  run "Install Appraisal" sudo gem install appraisal
  run "Install VirtualBox" sudo apt-get install -y virtualbox
}

runTests() {
  run "" cd /vagrant-openstack
  run "Run 'bundle update'" bundle update
  run "Run 'bundle install'" bundle install
  run "Run 'bundle exec rake" bundle exec rake
  #run "Run 'appraisal install'" appraisal install
  #run "Run 'appraisal rake'" appraisal rake
  run "Finished"
}

#
# Flag provisionning finished without any error
#
finish() {
  run "" mkdir -p /var/lib/vagrant/provisionning
  run "" touch /var/lib/vagrant/provisionning/ok
  #TODO(julienvey) generate private key with ssh-keygen
  run "" export RESTCLIENT_LOG=stdout
}

# Main script
install
runTests
finish

exit 0

SCRIPT

Vagrant.configure("2") do |config|

  config.vm.box = "trusty64"
  config.vm.box_url = "http://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"

  config.vm.network "private_network", ip: "192.168.40.30"

  config.vm.provider :virtualbox do |vb|
    vb.name = "ruby-env-dev"
    vb.customize ["modifyvm", :id, "--cpus", "1"]
    vb.customize ["modifyvm", :id, "--memory", "1024"]
  end

  config.vm.synced_folder "../source", "/vagrant-openstack"

  config.vm.provision "shell", inline: $script

end
